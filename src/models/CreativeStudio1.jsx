/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 CreativeStudio1.glb
Modified with enhancements
*/

import React, { useRef } from 'react'
import { useGLTF, useFrame } from '@react-three/drei'
import { useSpring, animated } from '@react-spring/three'

export function Model(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/assets/models/CreativeStudio1.glb')

  // Add subtle animation to the model
  useFrame((state) => {
    if (group.current) {
      group.current.rotation.y = Math.sin(state.clock.elapsedTime * 0.15) * 0.05
    }
  })

  // Using consistent scale for the entire model (reduced from original)
  return (
    <group ref={group} {...props} dispose={null} scale={0.5 /* Reduced scale for better viewing */}>
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
        <mesh geometry={nodes.root003.geometry} material={materials['Material_542.001']} position={[-0.019, 0.141, -0.045]} scale={[0.295, 0.205, 0.235]} />
      </group>
      <mesh geometry={nodes.temp.geometry} material={materials['Material.001']} position={[0, 3.82, 0]} rotation={[Math.PI / 2, 0, 0]} scale={[8.1, 8.906, 7.595]} />
      <mesh geometry={nodes.temp001.geometry} material={materials['Material.002']} position={[-5.526, 1.178, 3.73]} rotation={[1.635, 0.001, -2.365]} scale={[2.057, 1.475, 1.896]} />
      <mesh geometry={nodes.temp002.geometry} material={materials['Material.003']} position={[-2.774, 0.78, -3.408]} rotation={[1.538, -0.013, -0.672]} />
      <mesh geometry={nodes.temp003.geometry} material={materials['Material.004']} position={[2.021, 0.804, -3.359]} rotation={[1.621, 0.007, 0.588]} />
      <mesh geometry={nodes.temp004.geometry} material={materials['Material.006']} position={[-0.302, 0.713, -4.312]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.temp005.geometry} material={materials['Material.007']} position={[-4.272, 0.772, -2.56]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.temp007.geometry} material={materials['Material.010']} position={[4.008, 0.8, -2.574]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.temp008.geometry} material={materials['Material.011']} position={[-0.269, 0.568, -0.993]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.temp006.geometry} material={materials['Material.012']} position={[-5.526, 1.178, 3.73]} rotation={[1.635, 0.001, -2.365]} scale={[2.057, 1.475, 1.896]} />
      <mesh geometry={nodes.temp009.geometry} material={materials['Material.013']} position={[5.154, 1.162, 4.07]} rotation={[Math.PI / 2, 0, 2.609]} scale={[2.057, 1.457, 1.896]} />
      <group position={[0.089, -0.684, -7.447]} scale={[5.92, 4.564, 6.569]}>
        <mesh geometry={nodes.Cube002.geometry} material={materials.body} />
        <mesh geometry={nodes.Cube002_1.geometry} material={materials.body_2} />
      </group>
      <group position={[0.031, 0.203, -7.33]} rotation={[0, 0, -Math.PI / 2]} scale={[5.966, 5.833, 2]}>
        <mesh geometry={nodes.Cylinder002.geometry} material={materials['body.002']} />
        <mesh geometry={nodes.Cylinder002_1.geometry} material={materials['fabric.001']} />
      </group>
    </group>
  )
}

// This preloads the 3D model file to improve performance
useGLTF.preload('/assets/models/CreativeStudio1.glb')

// Extended version with interactive features (uncomment to use)
export function InteractiveModel(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/assets/models/CreativeStudio1.glb')

  // Interactive spring animation for hovering
  const [spring, set] = useSpring(() => ({
    scale: 0.5,
    rotation: [0, 0, 0],
    config: { mass: 3, tension: 400, friction: 30 }
  }))

  const handlePointerOver = () => {
    set({ scale: 0.55, rotation: [0, Math.PI / 20, 0] })
  }

  const handlePointerOut = () => {
    set({ scale: 0.5, rotation: [0, 0, 0] })
  }

  return (
    <animated.group
      ref={group}
      {...props}
      {...spring}
      onPointerOver={handlePointerOver}
      onPointerOut={handlePointerOut}
      dispose={null}
    >
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
        <mesh geometry={nodes.root003.geometry} material={materials['Material_542.001']} position={[-0.019, 0.141, -0.045]} scale={[0.295, 0.205, 0.235]} />
      </group>
      <mesh geometry={nodes.temp.geometry} material={materials['Material.001']} position={[0, 3.82, 0]} rotation={[Math.PI / 2, 0, 0]} scale={[8.1, 8.906, 7.595]} />
      <mesh geometry={nodes.temp001.geometry} material={materials['Material.002']} position={[-5.526, 1.178, 3.73]} rotation={[1.635, 0.001, -2.365]} scale={[2.057, 1.475, 1.896]} />
      <mesh geometry={nodes.temp002.geometry} material={materials['Material.003']} position={[-2.774, 0.78, -3.408]} rotation={[1.538, -0.013, -0.672]} />
      <mesh geometry={nodes.temp003.geometry} material={materials['Material.004']} position={[2.021, 0.804, -3.359]} rotation={[1.621, 0.007, 0.588]} />
      <mesh geometry={nodes.temp004.geometry} material={materials['Material.006']} position={[-0.302, 0.713, -4.312]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.temp005.geometry} material={materials['Material.007']} position={[-4.272, 0.772, -2.56]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.temp007.geometry} material={materials['Material.010']} position={[4.008, 0.8, -2.574]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.temp008.geometry} material={materials['Material.011']} position={[-0.269, 0.568, -0.993]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.temp006.geometry} material={materials['Material.012']} position={[-5.526, 1.178, 3.73]} rotation={[1.635, 0.001, -2.365]} scale={[2.057, 1.475, 1.896]} />
      <mesh geometry={nodes.temp009.geometry} material={materials['Material.013']} position={[5.154, 1.162, 4.07]} rotation={[Math.PI / 2, 0, 2.609]} scale={[2.057, 1.457, 1.896]} />
      <group position={[0.089, -0.684, -7.447]} scale={[5.92, 4.564, 6.569]}>
        <mesh geometry={nodes.Cube002.geometry} material={materials.body} />
        <mesh geometry={nodes.Cube002_1.geometry} material={materials.body_2} />
      </group>
      <group position={[0.031, 0.203, -7.33]} rotation={[0, 0, -Math.PI / 2]} scale={[5.966, 5.833, 2]}>
        <mesh geometry={nodes.Cylinder002.geometry} material={materials['body.002']} />
        <mesh geometry={nodes.Cylinder002_1.geometry} material={materials['fabric.001']} />
      </group>
    </animated.group>
  )
}

useGLTF.preload('/assets/models/CreativeStudio1.glb')
